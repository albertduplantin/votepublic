{"file":"D:\\Documents\\aiprojets\\votepublic\\src\\contexts\\AuthContext.tsx","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+CAAyF;AAEzF,yDAQiC;AAWjC,MAAM,WAAW,GAAG,IAAA,qBAAa,EAA8B,SAAS,CAAC,CAAC;AAMnE,MAAM,YAAY,GAAgC,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE;IACxE,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,IAAA,gBAAQ,EAAY;QAC5C,IAAI,EAAE,IAAI;QACV,OAAO,EAAE,IAAI;QACb,KAAK,EAAE,IAAI;KACZ,CAAC,CAAC;IAEH,IAAA,iBAAS,EAAC,GAAG,EAAE;QACb,oDAAoD;QACpD,MAAM,WAAW,GAAG,IAAA,+BAAiB,EAAC,CAAC,IAAI,EAAE,EAAE;YAC7C,QAAQ,CAAC;gBACP,IAAI;gBACJ,OAAO,EAAE,KAAK;gBACd,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,OAAO,GAAG,EAAE,CAAC,WAAW,EAAE,CAAC;IAC7B,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,MAAM,KAAK,GAAG,KAAK,EAAE,IAAmB,EAAiB,EAAE;QACzD,IAAI,CAAC;YACH,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;YAC5D,MAAM,IAAI,GAAG,MAAM,IAAA,4BAAc,EAAC,IAAI,CAAC,CAAC;YACxC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;QACxD,CAAC;QAAC,OAAO,KAAU,EAAE,CAAC;YACpB,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBAChB,GAAG,IAAI;gBACP,OAAO,EAAE,KAAK;gBACd,KAAK,EAAE,KAAK,CAAC,OAAO;aACrB,CAAC,CAAC,CAAC;YACJ,MAAM,KAAK,CAAC;QACd,CAAC;IACH,CAAC,CAAC;IAEF,MAAM,QAAQ,GAAG,KAAK,EAAE,IAAsB,EAAiB,EAAE;QAC/D,IAAI,CAAC;YACH,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;YAC5D,MAAM,IAAI,GAAG,MAAM,IAAA,+BAAiB,EAAC,IAAI,CAAC,CAAC;YAC3C,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;QACxD,CAAC;QAAC,OAAO,KAAU,EAAE,CAAC;YACpB,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBAChB,GAAG,IAAI;gBACP,OAAO,EAAE,KAAK;gBACd,KAAK,EAAE,KAAK,CAAC,OAAO;aACrB,CAAC,CAAC,CAAC;YACJ,MAAM,KAAK,CAAC;QACd,CAAC;IACH,CAAC,CAAC;IAEF,MAAM,iBAAiB,GAAG,KAAK,IAAmB,EAAE;QAClD,IAAI,CAAC;YACH,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;YAC5D,MAAM,IAAI,GAAG,MAAM,IAAA,6BAAe,GAAE,CAAC;YACrC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;QACxD,CAAC;QAAC,OAAO,KAAU,EAAE,CAAC;YACpB,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBAChB,GAAG,IAAI;gBACP,OAAO,EAAE,KAAK;gBACd,KAAK,EAAE,KAAK,CAAC,OAAO;aACrB,CAAC,CAAC,CAAC;YACJ,MAAM,KAAK,CAAC;QACd,CAAC;IACH,CAAC,CAAC;IAEF,MAAM,YAAY,GAAG,KAAK,IAAmB,EAAE;QAC7C,IAAI,CAAC;YACH,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;YAC5D,MAAM,IAAA,oBAAM,GAAE,CAAC;YACf,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;QAC9D,CAAC;QAAC,OAAO,KAAU,EAAE,CAAC;YACpB,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBAChB,GAAG,IAAI;gBACP,OAAO,EAAE,KAAK;gBACd,KAAK,EAAE,KAAK,CAAC,OAAO;aACrB,CAAC,CAAC,CAAC;YACJ,MAAM,KAAK,CAAC;QACd,CAAC;IACH,CAAC,CAAC;IAEF,MAAM,mBAAmB,GAAG,KAAK,EAAE,KAAa,EAAiB,EAAE;QACjE,IAAI,CAAC;YACH,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;YAC5D,MAAM,IAAA,2BAAa,EAAC,KAAK,CAAC,CAAC;YAC3B,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;QAClD,CAAC;QAAC,OAAO,KAAU,EAAE,CAAC;YACpB,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBAChB,GAAG,IAAI;gBACP,OAAO,EAAE,KAAK;gBACd,KAAK,EAAE,KAAK,CAAC,OAAO;aACrB,CAAC,CAAC,CAAC;YACJ,MAAM,KAAK,CAAC;QACd,CAAC;IACH,CAAC,CAAC;IAEF,MAAM,mBAAmB,GAAG,KAAK,EAAE,OAAsB,EAAiB,EAAE;QAC1E,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;YAChB,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;QAC9C,CAAC;QAED,IAAI,CAAC;YACH,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;YAC5D,MAAM,IAAA,+BAAiB,EAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;YAEjD,6BAA6B;YAC7B,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBAChB,GAAG,IAAI;gBACP,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,EAAE,GAAG,OAAO,EAAE,CAAC,CAAC,CAAC,IAAI;gBACrD,OAAO,EAAE,KAAK;aACf,CAAC,CAAC,CAAC;QACN,CAAC;QAAC,OAAO,KAAU,EAAE,CAAC;YACpB,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBAChB,GAAG,IAAI;gBACP,OAAO,EAAE,KAAK;gBACd,KAAK,EAAE,KAAK,CAAC,OAAO;aACrB,CAAC,CAAC,CAAC;YACJ,MAAM,KAAK,CAAC;QACd,CAAC;IACH,CAAC,CAAC;IAEF,MAAM,KAAK,GAAoB;QAC7B,GAAG,KAAK;QACR,KAAK;QACL,QAAQ;QACR,eAAe,EAAE,iBAAiB;QAClC,MAAM,EAAE,YAAY;QACpB,aAAa,EAAE,mBAAmB;QAClC,aAAa,EAAE,mBAAmB;KACnC,CAAC;IAEF,OAAO,CACL,uBAAC,WAAW,CAAC,QAAQ,IAAC,KAAK,EAAE,KAAK,YAC/B,QAAQ,GACY,CACxB,CAAC;AACJ,CAAC,CAAC;AAvIW,QAAA,YAAY,gBAuIvB;AAEK,MAAM,OAAO,GAAG,GAAoB,EAAE;IAC3C,MAAM,OAAO,GAAG,IAAA,kBAAU,EAAC,WAAW,CAAC,CAAC;IACxC,IAAI,OAAO,KAAK,SAAS,EAAE,CAAC;QAC1B,MAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC,CAAC;IACpE,CAAC;IACD,OAAO,OAAO,CAAC;AACjB,CAAC,CAAC;AANW,QAAA,OAAO,WAMlB","names":[],"sources":["D:\\Documents\\aiprojets\\votepublic\\src\\contexts\\AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState, ReactNode } from 'react';\r\nimport { User, AuthState, LoginFormData, RegisterFormData } from '../types';\r\nimport {\r\n  loginWithEmail,\r\n  registerWithEmail,\r\n  loginWithGoogle,\r\n  logout,\r\n  resetPassword,\r\n  updateUserProfile,\r\n  onAuthStateChange,\r\n} from '../services/authService';\r\n\r\ninterface AuthContextType extends AuthState {\r\n  login: (data: LoginFormData) => Promise<void>;\r\n  register: (data: RegisterFormData) => Promise<void>;\r\n  loginWithGoogle: () => Promise<void>;\r\n  logout: () => Promise<void>;\r\n  resetPassword: (email: string) => Promise<void>;\r\n  updateProfile: (updates: Partial<User>) => Promise<void>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [state, setState] = useState<AuthState>({\r\n    user: null,\r\n    loading: true,\r\n    error: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Écouter les changements d'état d'authentification\r\n    const unsubscribe = onAuthStateChange((user) => {\r\n      setState({\r\n        user,\r\n        loading: false,\r\n        error: null,\r\n      });\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  const login = async (data: LoginFormData): Promise<void> => {\r\n    try {\r\n      setState(prev => ({ ...prev, loading: true, error: null }));\r\n      const user = await loginWithEmail(data);\r\n      setState(prev => ({ ...prev, user, loading: false }));\r\n    } catch (error: any) {\r\n      setState(prev => ({ \r\n        ...prev, \r\n        loading: false, \r\n        error: error.message \r\n      }));\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const register = async (data: RegisterFormData): Promise<void> => {\r\n    try {\r\n      setState(prev => ({ ...prev, loading: true, error: null }));\r\n      const user = await registerWithEmail(data);\r\n      setState(prev => ({ ...prev, user, loading: false }));\r\n    } catch (error: any) {\r\n      setState(prev => ({ \r\n        ...prev, \r\n        loading: false, \r\n        error: error.message \r\n      }));\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleGoogleLogin = async (): Promise<void> => {\r\n    try {\r\n      setState(prev => ({ ...prev, loading: true, error: null }));\r\n      const user = await loginWithGoogle();\r\n      setState(prev => ({ ...prev, user, loading: false }));\r\n    } catch (error: any) {\r\n      setState(prev => ({ \r\n        ...prev, \r\n        loading: false, \r\n        error: error.message \r\n      }));\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleLogout = async (): Promise<void> => {\r\n    try {\r\n      setState(prev => ({ ...prev, loading: true, error: null }));\r\n      await logout();\r\n      setState(prev => ({ ...prev, user: null, loading: false }));\r\n    } catch (error: any) {\r\n      setState(prev => ({ \r\n        ...prev, \r\n        loading: false, \r\n        error: error.message \r\n      }));\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleResetPassword = async (email: string): Promise<void> => {\r\n    try {\r\n      setState(prev => ({ ...prev, loading: true, error: null }));\r\n      await resetPassword(email);\r\n      setState(prev => ({ ...prev, loading: false }));\r\n    } catch (error: any) {\r\n      setState(prev => ({ \r\n        ...prev, \r\n        loading: false, \r\n        error: error.message \r\n      }));\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleUpdateProfile = async (updates: Partial<User>): Promise<void> => {\r\n    if (!state.user) {\r\n      throw new Error('Utilisateur non connecté');\r\n    }\r\n\r\n    try {\r\n      setState(prev => ({ ...prev, loading: true, error: null }));\r\n      await updateUserProfile(state.user.uid, updates);\r\n      \r\n      // Mettre à jour l'état local\r\n      setState(prev => ({\r\n        ...prev,\r\n        user: prev.user ? { ...prev.user, ...updates } : null,\r\n        loading: false,\r\n      }));\r\n    } catch (error: any) {\r\n      setState(prev => ({ \r\n        ...prev, \r\n        loading: false, \r\n        error: error.message \r\n      }));\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const value: AuthContextType = {\r\n    ...state,\r\n    login,\r\n    register,\r\n    loginWithGoogle: handleGoogleLogin,\r\n    logout: handleLogout,\r\n    resetPassword: handleResetPassword,\r\n    updateProfile: handleUpdateProfile,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = (): AuthContextType => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth doit être utilisé dans un AuthProvider');\r\n  }\r\n  return context;\r\n}; "],"version":3}