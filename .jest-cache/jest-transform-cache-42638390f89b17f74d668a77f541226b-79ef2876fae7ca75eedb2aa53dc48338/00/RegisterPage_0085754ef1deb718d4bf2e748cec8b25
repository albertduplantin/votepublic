744bee77f0f45c09ae0758707a550962
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RegisterPage = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = __importStar(require("react"));
const react_router_dom_1 = require("react-router-dom");
const react_hook_form_1 = require("react-hook-form");
const zod_1 = require("@hookform/resolvers/zod");
const zod_2 = require("zod");
const react_hot_toast_1 = __importDefault(require("react-hot-toast"));
const lucide_react_1 = require("lucide-react");
const AuthContext_1 = require("../contexts/AuthContext");
const constants_1 = require("../utils/constants");
// Schéma de validation pour l'inscription
const registerSchema = zod_2.z.object({
    email: zod_2.z.string().email('Adresse email invalide'),
    password: zod_2.z.string().min(6, 'Le mot de passe doit contenir au moins 6 caractères'),
    confirmPassword: zod_2.z.string(),
}).refine((data) => data.password === data.confirmPassword, {
    message: "Les mots de passe ne correspondent pas",
    path: ["confirmPassword"],
});
const RegisterPage = () => {
    const { register: registerUser, loading } = (0, AuthContext_1.useAuth)();
    const navigate = (0, react_router_dom_1.useNavigate)();
    const [showPassword, setShowPassword] = (0, react_1.useState)(false);
    const [showConfirmPassword, setShowConfirmPassword] = (0, react_1.useState)(false);
    const { register, handleSubmit, formState: { errors, isSubmitting }, } = (0, react_hook_form_1.useForm)({
        resolver: (0, zod_1.zodResolver)(registerSchema),
    });
    const onSubmit = async (data) => {
        try {
            await registerUser({
                email: data.email,
                password: data.password,
                confirmPassword: data.confirmPassword,
            });
            react_hot_toast_1.default.success(constants_1.SUCCESS_MESSAGES.LOGIN_SUCCESS);
            navigate(constants_1.ROUTES.HOME);
        }
        catch (error) {
            react_hot_toast_1.default.error(error.message || constants_1.ERROR_MESSAGES.AUTH_ERROR);
        }
    };
    if (loading) {
        return ((0, jsx_runtime_1.jsx)("div", { className: "min-h-screen flex items-center justify-center bg-gray-50", children: (0, jsx_runtime_1.jsxs)("div", { className: "text-center", children: [(0, jsx_runtime_1.jsx)("div", { className: "animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600 mx-auto" }), (0, jsx_runtime_1.jsx)("p", { className: "mt-4 text-gray-600", children: "Chargement..." })] }) }));
    }
    return ((0, jsx_runtime_1.jsx)("div", { className: "min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8", children: (0, jsx_runtime_1.jsxs)("div", { className: "max-w-md w-full space-y-8", children: [(0, jsx_runtime_1.jsxs)("div", { className: "text-center", children: [(0, jsx_runtime_1.jsxs)(react_router_dom_1.Link, { to: constants_1.ROUTES.HOME, className: "inline-flex items-center text-sm text-gray-600 hover:text-gray-900 mb-4", children: [(0, jsx_runtime_1.jsx)(lucide_react_1.ArrowLeft, { className: "w-4 h-4 mr-1" }), "Retour \u00E0 l'accueil"] }), (0, jsx_runtime_1.jsx)("h2", { className: "text-3xl font-bold text-gray-900", children: "Cr\u00E9er un compte" }), (0, jsx_runtime_1.jsx)("p", { className: "mt-2 text-sm text-gray-600", children: "Rejoignez le festival et participez aux votes" })] }), (0, jsx_runtime_1.jsxs)("div", { className: "card", children: [(0, jsx_runtime_1.jsxs)("form", { onSubmit: handleSubmit(onSubmit), className: "space-y-6", children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsxs)("label", { htmlFor: "email", className: "form-label", children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Mail, { className: "w-4 h-4 inline mr-2" }), "Adresse email"] }), (0, jsx_runtime_1.jsx)("input", { id: "email", type: "email", ...register('email'), className: "input-field", placeholder: "votre@email.com", autoComplete: "email" }), errors.email && ((0, jsx_runtime_1.jsx)("p", { className: "form-error", children: errors.email.message?.toString() }))] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsxs)("label", { htmlFor: "password", className: "form-label", children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Lock, { className: "w-4 h-4 inline mr-2" }), "Mot de passe"] }), (0, jsx_runtime_1.jsxs)("div", { className: "relative", children: [(0, jsx_runtime_1.jsx)("input", { id: "password", type: showPassword ? 'text' : 'password', ...register('password'), className: "input-field pr-10", placeholder: "Votre mot de passe", autoComplete: "new-password" }), (0, jsx_runtime_1.jsx)("button", { type: "button", onClick: () => setShowPassword(!showPassword), className: "absolute inset-y-0 right-0 pr-3 flex items-center text-gray-400 hover:text-gray-600", children: showPassword ? ((0, jsx_runtime_1.jsx)(lucide_react_1.EyeOff, { className: "w-5 h-5" })) : ((0, jsx_runtime_1.jsx)(lucide_react_1.Eye, { className: "w-5 h-5" })) })] }), errors.password && ((0, jsx_runtime_1.jsx)("p", { className: "form-error", children: errors.password.message?.toString() }))] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsxs)("label", { htmlFor: "confirmPassword", className: "form-label", children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Lock, { className: "w-4 h-4 inline mr-2" }), "Confirmer le mot de passe"] }), (0, jsx_runtime_1.jsxs)("div", { className: "relative", children: [(0, jsx_runtime_1.jsx)("input", { id: "confirmPassword", type: showConfirmPassword ? 'text' : 'password', ...register('confirmPassword'), className: "input-field pr-10", placeholder: "Confirmez votre mot de passe", autoComplete: "new-password" }), (0, jsx_runtime_1.jsx)("button", { type: "button", onClick: () => setShowConfirmPassword(!showConfirmPassword), className: "absolute inset-y-0 right-0 pr-3 flex items-center text-gray-400 hover:text-gray-600", children: showConfirmPassword ? ((0, jsx_runtime_1.jsx)(lucide_react_1.EyeOff, { className: "w-5 h-5" })) : ((0, jsx_runtime_1.jsx)(lucide_react_1.Eye, { className: "w-5 h-5" })) })] }), errors.confirmPassword && ((0, jsx_runtime_1.jsx)("p", { className: "form-error", children: errors.confirmPassword.message?.toString() }))] }), (0, jsx_runtime_1.jsx)("button", { type: "submit", disabled: isSubmitting, className: "btn-primary w-full disabled:opacity-50 disabled:cursor-not-allowed", children: isSubmitting ? ((0, jsx_runtime_1.jsxs)("div", { className: "flex items-center justify-center", children: [(0, jsx_runtime_1.jsx)("div", { className: "animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2" }), "Cr\u00E9ation en cours..."] })) : ('Créer mon compte') })] }), (0, jsx_runtime_1.jsx)("div", { className: "mt-6 text-center", children: (0, jsx_runtime_1.jsx)(react_router_dom_1.Link, { to: constants_1.ROUTES.LOGIN, className: "text-sm text-primary-600 hover:text-primary-500", children: "D\u00E9j\u00E0 un compte ? Se connecter" }) })] })] }) }));
};
exports.RegisterPage = RegisterPage;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,