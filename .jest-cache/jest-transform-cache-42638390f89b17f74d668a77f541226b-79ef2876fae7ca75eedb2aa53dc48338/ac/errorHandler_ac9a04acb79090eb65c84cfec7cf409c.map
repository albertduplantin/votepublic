{"file":"D:\\Documents\\aiprojets\\votepublic\\src\\utils\\errorHandler.ts","mappings":"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","names":[],"sources":["D:\\Documents\\aiprojets\\votepublic\\src\\utils\\errorHandler.ts"],"sourcesContent":["import toast from 'react-hot-toast';\r\nimport { ERROR_MESSAGES } from './constants';\r\n\r\nexport interface AppError extends Error {\r\n  code?: string;\r\n  status?: number;\r\n  context?: string;\r\n  timestamp?: string;\r\n}\r\n\r\nexport class ErrorHandler {\r\n  private static instance: ErrorHandler;\r\n  private errorLog: AppError[] = [];\r\n\r\n  static getInstance(): ErrorHandler {\r\n    if (!ErrorHandler.instance) {\r\n      ErrorHandler.instance = new ErrorHandler();\r\n    }\r\n    return ErrorHandler.instance;\r\n  }\r\n\r\n  /**\r\n   * Gère une erreur de manière centralisée\r\n   */\r\n  handleError(error: AppError, context?: string): void {\r\n    const appError: AppError = {\r\n      ...error,\r\n      context: context || 'unknown',\r\n      timestamp: new Date().toISOString(),\r\n    };\r\n\r\n    // Logger l'erreur\r\n    this.logError(appError);\r\n\r\n    // Afficher un message utilisateur approprié\r\n    this.showUserMessage(appError);\r\n\r\n    // En production, envoyer à un service de monitoring\r\n    if (process.env.NODE_ENV === 'production') {\r\n      this.sendToMonitoring(appError);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Logger l'erreur localement\r\n   */\r\n  private logError(error: AppError): void {\r\n    this.errorLog.push(error);\r\n    \r\n    // Limiter la taille du log\r\n    if (this.errorLog.length > 100) {\r\n      this.errorLog = this.errorLog.slice(-50);\r\n    }\r\n\r\n    console.error(`[${error.context}] ${error.message}`, {\r\n      code: error.code,\r\n      status: error.status,\r\n      stack: error.stack,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Afficher un message utilisateur\r\n   */\r\n  private showUserMessage(error: AppError): void {\r\n    let message = ERROR_MESSAGES.NETWORK_ERROR;\r\n\r\n    // Messages spécifiques selon le contexte\r\n    switch (error.context) {\r\n      case 'auth':\r\n        message = ERROR_MESSAGES.AUTH_ERROR;\r\n        break;\r\n      case 'vote':\r\n        message = ERROR_MESSAGES.VOTE_ERROR;\r\n        break;\r\n      case 'upload':\r\n        message = ERROR_MESSAGES.UPLOAD_ERROR;\r\n        break;\r\n      case 'permission':\r\n        message = ERROR_MESSAGES.PERMISSION_ERROR;\r\n        break;\r\n      case 'validation':\r\n        message = ERROR_MESSAGES.VALIDATION_ERROR;\r\n        break;\r\n      default:\r\n        // Utiliser le message d'erreur Firebase si disponible\r\n        if (error.code && error.code.startsWith('auth/')) {\r\n          message = this.getFirebaseErrorMessage(error.code);\r\n        } else if (error.message) {\r\n          message = error.message;\r\n        }\r\n    }\r\n\r\n    toast.error(message);\r\n  }\r\n\r\n  /**\r\n   * Envoyer l'erreur à un service de monitoring (ex: Sentry)\r\n   */\r\n  private sendToMonitoring(error: AppError): void {\r\n    // TODO: Implémenter l'envoi vers un service de monitoring\r\n    // Exemple avec Sentry:\r\n    // Sentry.captureException(error);\r\n  }\r\n\r\n  /**\r\n   * Récupérer les messages d'erreur Firebase\r\n   */\r\n  private getFirebaseErrorMessage(code: string): string {\r\n    const errorMessages: Record<string, string> = {\r\n      'auth/user-not-found': 'Aucun utilisateur trouvé avec cet email.',\r\n      'auth/wrong-password': 'Mot de passe incorrect.',\r\n      'auth/email-already-in-use': 'Cet email est déjà utilisé.',\r\n      'auth/weak-password': 'Le mot de passe doit contenir au moins 6 caractères.',\r\n      'auth/invalid-email': 'Adresse email invalide.',\r\n      'auth/too-many-requests': 'Trop de tentatives. Réessayez plus tard.',\r\n      'auth/popup-closed-by-user': 'Fenêtre de connexion fermée.',\r\n      'auth/cancelled-popup-request': 'Connexion annulée.',\r\n      'auth/network-request-failed': 'Erreur de réseau. Vérifiez votre connexion.',\r\n    };\r\n\r\n    return errorMessages[code] || ERROR_MESSAGES.AUTH_ERROR;\r\n  }\r\n\r\n  /**\r\n   * Récupérer l'historique des erreurs\r\n   */\r\n  getErrorLog(): AppError[] {\r\n    return [...this.errorLog];\r\n  }\r\n\r\n  /**\r\n   * Vider l'historique des erreurs\r\n   */\r\n  clearErrorLog(): void {\r\n    this.errorLog = [];\r\n  }\r\n}\r\n\r\n// Instance singleton\r\nexport const errorHandler = ErrorHandler.getInstance();\r\n\r\n/**\r\n * Wrapper pour les fonctions async avec gestion d'erreur automatique\r\n */\r\nexport const withErrorHandling = <T extends any[], R>(\r\n  fn: (...args: T) => Promise<R>,\r\n  context: string\r\n) => {\r\n  return async (...args: T): Promise<R> => {\r\n    try {\r\n      return await fn(...args);\r\n    } catch (error) {\r\n      errorHandler.handleError(error as AppError, context);\r\n      throw error;\r\n    }\r\n  };\r\n};\r\n\r\n/**\r\n * Hook pour gérer les erreurs dans les composants\r\n */\r\nexport const useErrorHandler = () => {\r\n  const handleError = (error: AppError, context?: string) => {\r\n    errorHandler.handleError(error, context);\r\n  };\r\n\r\n  return { handleError };\r\n}; "],"version":3}