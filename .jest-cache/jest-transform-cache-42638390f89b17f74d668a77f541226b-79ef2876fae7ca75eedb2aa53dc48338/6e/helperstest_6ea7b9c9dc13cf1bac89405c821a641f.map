{"file":"D:\\Documents\\aiprojets\\votepublic\\src\\__tests__\\utils\\helpers.test.ts","mappings":"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","names":[],"sources":["D:\\Documents\\aiprojets\\votepublic\\src\\__tests__\\utils\\helpers.test.ts"],"sourcesContent":["import {\r\n  generateId,\r\n  isValidEmail,\r\n  isValidPassword,\r\n  formatRating,\r\n  calculateAverageRating,\r\n  cn,\r\n} from '../../utils/helpers';\r\n\r\ndescribe('Helpers', () => {\r\n  describe('generateId', () => {\r\n    it('should generate unique IDs', () => {\r\n      const id1 = generateId();\r\n      const id2 = generateId();\r\n      \r\n      expect(id1).toBeDefined();\r\n      expect(id2).toBeDefined();\r\n      expect(id1).not.toBe(id2);\r\n      expect(typeof id1).toBe('string');\r\n    });\r\n  });\r\n\r\n  describe('isValidEmail', () => {\r\n    it('should validate correct email addresses', () => {\r\n      expect(isValidEmail('test@example.com')).toBe(true);\r\n      expect(isValidEmail('user.name@domain.co.uk')).toBe(true);\r\n      expect(isValidEmail('test+tag@example.org')).toBe(true);\r\n    });\r\n\r\n    it('should reject invalid email addresses', () => {\r\n      expect(isValidEmail('invalid-email')).toBe(false);\r\n      expect(isValidEmail('test@')).toBe(false);\r\n      expect(isValidEmail('@example.com')).toBe(false);\r\n      expect(isValidEmail('')).toBe(false);\r\n    });\r\n  });\r\n\r\n  describe('isValidPassword', () => {\r\n    it('should validate passwords with minimum length', () => {\r\n      expect(isValidPassword('123456')).toBe(true);\r\n      expect(isValidPassword('password123')).toBe(true);\r\n      expect(isValidPassword('a'.repeat(10))).toBe(true);\r\n    });\r\n\r\n    it('should reject passwords that are too short', () => {\r\n      expect(isValidPassword('12345')).toBe(false);\r\n      expect(isValidPassword('')).toBe(false);\r\n      expect(isValidPassword('abc')).toBe(false);\r\n    });\r\n  });\r\n\r\n  describe('formatRating', () => {\r\n    it('should format ratings correctly', () => {\r\n      expect(formatRating(3.5)).toBe('3.5/5');\r\n      expect(formatRating(5)).toBe('5/5');\r\n      expect(formatRating(1)).toBe('1/5');\r\n    });\r\n  });\r\n\r\n  describe('calculateAverageRating', () => {\r\n    it('should calculate average rating correctly', () => {\r\n      expect(calculateAverageRating([1, 2, 3, 4, 5])).toBe(3);\r\n      expect(calculateAverageRating([5, 5, 5])).toBe(5);\r\n      expect(calculateAverageRating([1, 1])).toBe(1);\r\n      expect(calculateAverageRating([])).toBe(0);\r\n    });\r\n  });\r\n\r\n  describe('cn', () => {\r\n    it('should combine class names correctly', () => {\r\n      expect(cn('class1', 'class2')).toBe('class1 class2');\r\n      expect(cn('class1', undefined, 'class2')).toBe('class1 class2');\r\n      expect(cn('class1', null, 'class2')).toBe('class1 class2');\r\n      expect(cn('class1', false, 'class2')).toBe('class1 class2');\r\n    });\r\n\r\n    it('should handle empty values', () => {\r\n      expect(cn()).toBe('');\r\n      expect(cn('')).toBe('');\r\n      expect(cn(undefined, null, false, '')).toBe('');\r\n    });\r\n  });\r\n});"],"version":3}