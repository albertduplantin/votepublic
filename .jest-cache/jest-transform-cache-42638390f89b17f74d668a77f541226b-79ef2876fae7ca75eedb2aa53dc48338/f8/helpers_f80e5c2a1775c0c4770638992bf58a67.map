{"file":"D:\\Documents\\aiprojets\\votepublic\\src\\utils\\helpers.ts","mappings":";;;AAAA,2CAA+C;AAE/C;;GAEG;AACI,MAAM,UAAU,GAAG,GAAW,EAAE;IACrC,OAAO,IAAI,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AAC3E,CAAC,CAAC;AAFW,QAAA,UAAU,cAErB;AAEF;;GAEG;AACI,MAAM,iBAAiB,GAAG,GAAW,EAAE;IAC5C,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;IAC7B,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IACvD,OAAO,GAAG,SAAS,IAAI,MAAM,EAAE,CAAC;AAClC,CAAC,CAAC;AAJW,QAAA,iBAAiB,qBAI5B;AAEF;;GAEG;AACI,MAAM,YAAY,GAAG,CAAC,KAAa,EAAW,EAAE;IACrD,OAAO,4BAAgB,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC5C,CAAC,CAAC;AAFW,QAAA,YAAY,gBAEvB;AAEF;;GAEG;AACI,MAAM,eAAe,GAAG,CAAC,QAAgB,EAAW,EAAE;IAC3D,OAAO,QAAQ,CAAC,MAAM,IAAI,4BAAgB,CAAC,mBAAmB,CAAC;AACjE,CAAC,CAAC;AAFW,QAAA,eAAe,mBAE1B;AAEF;;GAEG;AACI,MAAM,gBAAgB,GAAG,CAAC,IAAU,EAAW,EAAE;IACtD,OAAO,CACL,4BAAgB,CAAC,mBAAmB,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC9D,IAAI,CAAC,IAAI,IAAI,4BAAgB,CAAC,aAAa,CAC5C,CAAC;AACJ,CAAC,CAAC;AALW,QAAA,gBAAgB,oBAK3B;AAEF;;GAEG;AACI,MAAM,WAAW,GAAG,CACzB,IAAU,EACV,WAAmB,GAAG,EACtB,YAAoB,GAAG,EACvB,UAAkB,GAAG,EACN,EAAE;IACjB,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QACrC,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAChD,MAAM,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACpC,MAAM,GAAG,GAAG,IAAI,KAAK,EAAE,CAAC;QAExB,GAAG,CAAC,MAAM,GAAG,GAAG,EAAE;YAChB,oCAAoC;YACpC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,GAAG,CAAC;YAE5B,IAAI,KAAK,GAAG,QAAQ,EAAE,CAAC;gBACrB,MAAM,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC,GAAG,KAAK,CAAC;gBACrC,KAAK,GAAG,QAAQ,CAAC;YACnB,CAAC;YAED,IAAI,MAAM,GAAG,SAAS,EAAE,CAAC;gBACvB,KAAK,GAAG,CAAC,KAAK,GAAG,SAAS,CAAC,GAAG,MAAM,CAAC;gBACrC,MAAM,GAAG,SAAS,CAAC;YACrB,CAAC;YAED,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;YACrB,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;YAEvB,IAAI,GAAG,EAAE,CAAC;gBACR,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;gBACxC,MAAM,CAAC,MAAM,CACX,CAAC,IAAI,EAAE,EAAE;oBACP,IAAI,IAAI,EAAE,CAAC;wBACT,OAAO,CAAC,IAAI,CAAC,CAAC;oBAChB,CAAC;yBAAM,CAAC;wBACN,MAAM,CAAC,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC,CAAC;oBACxD,CAAC;gBACH,CAAC,EACD,YAAY,EACZ,OAAO,CACR,CAAC;YACJ,CAAC;iBAAM,CAAC;gBACN,MAAM,CAAC,IAAI,KAAK,CAAC,wCAAwC,CAAC,CAAC,CAAC;YAC9D,CAAC;QACH,CAAC,CAAC;QAEF,GAAG,CAAC,OAAO,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAC,CAAC;QAC/E,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AAjDW,QAAA,WAAW,eAiDtB;AAEF;;GAEG;AACI,MAAM,UAAU,GAAG,CAAC,IAAU,EAAU,EAAE;IAC/C,OAAO,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE;QACtC,IAAI,EAAE,SAAS;QACf,KAAK,EAAE,MAAM;QACb,GAAG,EAAE,SAAS;QACd,IAAI,EAAE,SAAS;QACf,MAAM,EAAE,SAAS;KAClB,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAClB,CAAC,CAAC;AARW,QAAA,UAAU,cAQrB;AAEF;;GAEG;AACI,MAAM,YAAY,GAAG,CAAC,MAAc,EAAU,EAAE;IACrD,OAAO,GAAG,MAAM,IAAI,CAAC;AACvB,CAAC,CAAC;AAFW,QAAA,YAAY,gBAEvB;AAEF;;GAEG;AACI,MAAM,sBAAsB,GAAG,CAAC,OAAiB,EAAU,EAAE;IAClE,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC;QAAE,OAAO,CAAC,CAAC;IACnC,MAAM,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,MAAM,EAAE,EAAE,CAAC,GAAG,GAAG,MAAM,EAAE,CAAC,CAAC,CAAC;IAC7D,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;AACtD,CAAC,CAAC;AAJW,QAAA,sBAAsB,0BAIjC;AAEF;;GAEG;AACI,MAAM,0BAA0B,GAAG,CAAC,OAAiB,EAA0B,EAAE;IACtF,MAAM,YAAY,GAA2B,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;IAE9E,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;QACvB,IAAI,MAAM,IAAI,CAAC,IAAI,MAAM,IAAI,CAAC,EAAE,CAAC;YAC/B,YAAY,CAAC,MAAM,CAAC,EAAE,CAAC;QACzB,CAAC;IACH,CAAC,CAAC,CAAC;IAEH,OAAO,YAAY,CAAC;AACtB,CAAC,CAAC;AAVW,QAAA,0BAA0B,8BAUrC;AAEF;;GAEG;AACI,MAAM,YAAY,GAAG,GAAW,EAAE;IACvC,OAAO,SAAS,CAAC,SAAS,CAAC;AAC7B,CAAC,CAAC;AAFW,QAAA,YAAY,gBAEvB;AAEF;;GAEG;AACI,MAAM,YAAY,GAAG,KAAK,IAA4B,EAAE;IAC7D,IAAI,CAAC;QACH,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,mCAAmC,CAAC,CAAC;QAClE,MAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;QACnC,OAAO,IAAI,CAAC,EAAE,CAAC;IACjB,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,IAAI,CAAC,gCAAgC,EAAE,KAAK,CAAC,CAAC;QACtD,OAAO,IAAI,CAAC;IACd,CAAC;AACH,CAAC,CAAC;AATW,QAAA,YAAY,gBASvB;AAEF;;GAEG;AACI,MAAM,eAAe,GAAG,CAAC,GAAW,EAAE,KAAU,EAAQ,EAAE;IAC/D,IAAI,CAAC;QACH,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;IACnD,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,IAAI,CAAC,gCAAgC,EAAE,KAAK,CAAC,CAAC;IACxD,CAAC;AACH,CAAC,CAAC;AANW,QAAA,eAAe,mBAM1B;AAEF;;GAEG;AACI,MAAM,eAAe,GAAG,CAAI,GAAW,EAAE,YAAe,EAAK,EAAE;IACpE,IAAI,CAAC;QACH,MAAM,IAAI,GAAG,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACvC,OAAO,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC;IAChD,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,IAAI,CAAC,wCAAwC,EAAE,KAAK,CAAC,CAAC;QAC9D,OAAO,YAAY,CAAC;IACtB,CAAC;AACH,CAAC,CAAC;AARW,QAAA,eAAe,mBAQ1B;AAEF;;GAEG;AACI,MAAM,kBAAkB,GAAG,CAAC,GAAW,EAAQ,EAAE;IACtD,IAAI,CAAC;QACH,YAAY,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;IAC/B,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,IAAI,CAAC,uCAAuC,EAAE,KAAK,CAAC,CAAC;IAC/D,CAAC;AACH,CAAC,CAAC;AANW,QAAA,kBAAkB,sBAM7B;AAEF;;GAEG;AACI,MAAM,QAAQ,GAAG,CACtB,IAAO,EACP,IAAY,EACwB,EAAE;IACtC,IAAI,OAAe,CAAC;IAEpB,OAAO,CAAC,GAAG,IAAmB,EAAE,EAAE;QAChC,YAAY,CAAC,OAAO,CAAC,CAAC;QACtB,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;IACzD,CAAC,CAAC;AACJ,CAAC,CAAC;AAVW,QAAA,QAAQ,YAUnB;AAEF;;GAEG;AACI,MAAM,KAAK,GAAG,KAAK,EACxB,EAAoB,EACpB,aAAqB,CAAC,EACtB,QAAgB,IAAI,EACR,EAAE;IACd,IAAI,SAAS,GAAU,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAE5D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC;QACpC,IAAI,CAAC;YACH,OAAO,MAAM,EAAE,EAAE,CAAC;QACpB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,SAAS,GAAG,KAAc,CAAC;YAC3B,IAAI,CAAC,GAAG,UAAU,GAAG,CAAC,EAAE,CAAC;gBACvB,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5E,CAAC;QACH,CAAC;IACH,CAAC;IAED,MAAM,IAAI,KAAK,CAAC,SAAS,CAAC,OAAO,IAAI,yBAAyB,CAAC,CAAC;AAClE,CAAC,CAAC;AAnBW,QAAA,KAAK,SAmBhB;AAEF;;GAEG;AACI,MAAM,EAAE,GAAG,CAAC,GAAG,OAA8C,EAAU,EAAE;IAC9E,OAAO,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC3C,CAAC,CAAC;AAFW,QAAA,EAAE,MAEb","names":[],"sources":["D:\\Documents\\aiprojets\\votepublic\\src\\utils\\helpers.ts"],"sourcesContent":["import { VALIDATION_RULES } from './constants';\r\n\r\n/**\r\n * Génère un ID unique\r\n */\r\nexport const generateId = (): string => {\r\n  return Date.now().toString(36) + Math.random().toString(36).substring(2);\r\n};\r\n\r\n/**\r\n * Génère un ID de session unique pour les votes anonymes\r\n */\r\nexport const generateSessionId = (): string => {\r\n  const timestamp = Date.now();\r\n  const random = Math.random().toString(36).substring(2);\r\n  return `${timestamp}-${random}`;\r\n};\r\n\r\n/**\r\n * Valide une adresse email\r\n */\r\nexport const isValidEmail = (email: string): boolean => {\r\n  return VALIDATION_RULES.EMAIL.test(email);\r\n};\r\n\r\n/**\r\n * Valide un mot de passe\r\n */\r\nexport const isValidPassword = (password: string): boolean => {\r\n  return password.length >= VALIDATION_RULES.PASSWORD_MIN_LENGTH;\r\n};\r\n\r\n/**\r\n * Valide un fichier image\r\n */\r\nexport const isValidImageFile = (file: File): boolean => {\r\n  return (\r\n    VALIDATION_RULES.ALLOWED_IMAGE_TYPES.indexOf(file.type) !== -1 &&\r\n    file.size <= VALIDATION_RULES.MAX_FILE_SIZE\r\n  );\r\n};\r\n\r\n/**\r\n * Redimensionne une image\r\n */\r\nexport const resizeImage = (\r\n  file: File,\r\n  maxWidth: number = 800,\r\n  maxHeight: number = 600,\r\n  quality: number = 0.8\r\n): Promise<Blob> => {\r\n  return new Promise((resolve, reject) => {\r\n    const canvas = document.createElement('canvas');\r\n    const ctx = canvas.getContext('2d');\r\n    const img = new Image();\r\n\r\n    img.onload = () => {\r\n      // Calculer les nouvelles dimensions\r\n      let { width, height } = img;\r\n      \r\n      if (width > maxWidth) {\r\n        height = (height * maxWidth) / width;\r\n        width = maxWidth;\r\n      }\r\n      \r\n      if (height > maxHeight) {\r\n        width = (width * maxHeight) / height;\r\n        height = maxHeight;\r\n      }\r\n\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n\r\n      if (ctx) {\r\n        ctx.drawImage(img, 0, 0, width, height);\r\n        canvas.toBlob(\r\n          (blob) => {\r\n            if (blob) {\r\n              resolve(blob);\r\n            } else {\r\n              reject(new Error('Erreur lors du redimensionnement'));\r\n            }\r\n          },\r\n          'image/jpeg',\r\n          quality\r\n        );\r\n      } else {\r\n        reject(new Error('Impossible de créer le contexte canvas'));\r\n      }\r\n    };\r\n\r\n    img.onerror = () => reject(new Error('Erreur lors du chargement de l\\'image'));\r\n    img.src = URL.createObjectURL(file);\r\n  });\r\n};\r\n\r\n/**\r\n * Formate une date\r\n */\r\nexport const formatDate = (date: Date): string => {\r\n  return new Intl.DateTimeFormat('fr-FR', {\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric',\r\n    hour: '2-digit',\r\n    minute: '2-digit',\r\n  }).format(date);\r\n};\r\n\r\n/**\r\n * Formate une note avec étoiles\r\n */\r\nexport const formatRating = (rating: number): string => {\r\n  return `${rating}/5`;\r\n};\r\n\r\n/**\r\n * Calcule la moyenne des notes\r\n */\r\nexport const calculateAverageRating = (ratings: number[]): number => {\r\n  if (ratings.length === 0) return 0;\r\n  const sum = ratings.reduce((acc, rating) => acc + rating, 0);\r\n  return Math.round((sum / ratings.length) * 10) / 10;\r\n};\r\n\r\n/**\r\n * Génère une distribution des notes\r\n */\r\nexport const generateRatingDistribution = (ratings: number[]): Record<number, number> => {\r\n  const distribution: Record<number, number> = { 1: 0, 2: 0, 3: 0, 4: 0, 5: 0 };\r\n  \r\n  ratings.forEach(rating => {\r\n    if (rating >= 1 && rating <= 5) {\r\n      distribution[rating]++;\r\n    }\r\n  });\r\n  \r\n  return distribution;\r\n};\r\n\r\n/**\r\n * Retourne l'User Agent du navigateur\r\n */\r\nexport const getUserAgent = (): string => {\r\n  return navigator.userAgent;\r\n};\r\n\r\n/**\r\n * Retourne l'adresse IP (approximative via service externe)\r\n */\r\nexport const getIpAddress = async (): Promise<string | null> => {\r\n  try {\r\n    const response = await fetch('https://api.ipify.org?format=json');\r\n    const data = await response.json();\r\n    return data.ip;\r\n  } catch (error) {\r\n    console.warn('Impossible de récupérer l\\'IP:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\n/**\r\n * Stocke une valeur dans le localStorage\r\n */\r\nexport const setLocalStorage = (key: string, value: any): void => {\r\n  try {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  } catch (error) {\r\n    console.warn('Erreur lors du stockage local:', error);\r\n  }\r\n};\r\n\r\n/**\r\n * Récupère une valeur du localStorage\r\n */\r\nexport const getLocalStorage = <T>(key: string, defaultValue: T): T => {\r\n  try {\r\n    const item = localStorage.getItem(key);\r\n    return item ? JSON.parse(item) : defaultValue;\r\n  } catch (error) {\r\n    console.warn('Erreur lors de la récupération locale:', error);\r\n    return defaultValue;\r\n  }\r\n};\r\n\r\n/**\r\n * Supprime une valeur du localStorage\r\n */\r\nexport const removeLocalStorage = (key: string): void => {\r\n  try {\r\n    localStorage.removeItem(key);\r\n  } catch (error) {\r\n    console.warn('Erreur lors de la suppression locale:', error);\r\n  }\r\n};\r\n\r\n/**\r\n * Débounce une fonction\r\n */\r\nexport const debounce = <T extends (...args: any[]) => any>(\r\n  func: T,\r\n  wait: number\r\n): ((...args: Parameters<T>) => void) => {\r\n  let timeout: number;\r\n  \r\n  return (...args: Parameters<T>) => {\r\n    clearTimeout(timeout);\r\n    timeout = window.setTimeout(() => func(...args), wait);\r\n  };\r\n};\r\n\r\n/**\r\n * Retry une fonction avec délai\r\n */\r\nexport const retry = async <T>(\r\n  fn: () => Promise<T>,\r\n  maxRetries: number = 3,\r\n  delay: number = 1000\r\n): Promise<T> => {\r\n  let lastError: Error = new Error('Une erreur est survenue');\r\n  \r\n  for (let i = 0; i < maxRetries; i++) {\r\n    try {\r\n      return await fn();\r\n    } catch (error) {\r\n      lastError = error as Error;\r\n      if (i < maxRetries - 1) {\r\n        await new Promise(resolve => setTimeout(resolve, delay * Math.pow(2, i)));\r\n      }\r\n    }\r\n  }\r\n  \r\n  throw new Error(lastError.message || 'Une erreur est survenue');\r\n};\r\n\r\n/**\r\n * Combine les classes CSS\r\n */\r\nexport const cn = (...classes: (string | undefined | null | false)[]): string => {\r\n  return classes.filter(Boolean).join(' ');\r\n}; "],"version":3}