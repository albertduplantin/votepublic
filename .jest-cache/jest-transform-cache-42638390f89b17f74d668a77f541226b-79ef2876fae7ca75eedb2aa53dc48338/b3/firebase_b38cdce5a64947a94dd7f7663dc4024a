ae661c79477292de2275e58c4526bb67
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.analytics = exports.storage = exports.db = exports.auth = void 0;
const app_1 = require("firebase/app");
const auth_1 = require("firebase/auth");
const firestore_1 = require("firebase/firestore");
const storage_1 = require("firebase/storage");
const analytics_1 = require("firebase/analytics");
const constants_1 = require("../utils/constants");
// Initialiser Firebase
const app = (0, app_1.initializeApp)(constants_1.FIREBASE_CONFIG);
// Initialiser les services
exports.auth = (0, auth_1.getAuth)(app);
exports.db = (0, firestore_1.getFirestore)(app);
exports.storage = (0, storage_1.getStorage)(app);
// Initialiser Analytics (seulement si supporté)
exports.analytics = (0, analytics_1.isSupported)().then(yes => yes ? (0, analytics_1.getAnalytics)(app) : null);
// Connecter aux émulateurs en développement
if (process.env.NODE_ENV === 'development') {
    try {
        (0, auth_1.connectAuthEmulator)(exports.auth, 'http://localhost:9099');
        (0, firestore_1.connectFirestoreEmulator)(exports.db, 'localhost', 8080);
        (0, storage_1.connectStorageEmulator)(exports.storage, 'localhost', 9199);
    }
    catch (error) {
        console.warn('Émulateurs déjà connectés ou non disponibles');
    }
}
exports.default = app;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiRDpcXERvY3VtZW50c1xcYWlwcm9qZXRzXFx2b3RlcHVibGljXFxzcmNcXHNlcnZpY2VzXFxmaXJlYmFzZS50cyIsIm1hcHBpbmdzIjoiOzs7QUFBQSxzQ0FBNkM7QUFDN0Msd0NBQTZEO0FBQzdELGtEQUE0RTtBQUM1RSw4Q0FBc0U7QUFDdEUsa0RBQStEO0FBQy9ELGtEQUFxRDtBQUVyRCx1QkFBdUI7QUFDdkIsTUFBTSxHQUFHLEdBQUcsSUFBQSxtQkFBYSxFQUFDLDJCQUFlLENBQUMsQ0FBQztBQUUzQywyQkFBMkI7QUFDZCxRQUFBLElBQUksR0FBRyxJQUFBLGNBQU8sRUFBQyxHQUFHLENBQUMsQ0FBQztBQUNwQixRQUFBLEVBQUUsR0FBRyxJQUFBLHdCQUFZLEVBQUMsR0FBRyxDQUFDLENBQUM7QUFDdkIsUUFBQSxPQUFPLEdBQUcsSUFBQSxvQkFBVSxFQUFDLEdBQUcsQ0FBQyxDQUFDO0FBRXZDLGdEQUFnRDtBQUNuQyxRQUFBLFNBQVMsR0FBRyxJQUFBLHVCQUFXLEdBQUUsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLElBQUEsd0JBQVksRUFBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7QUFFbkYsNENBQTRDO0FBQzVDLElBQUksT0FBTyxDQUFDLEdBQUcsQ0FBQyxRQUFRLEtBQUssYUFBYSxFQUFFLENBQUM7SUFDM0MsSUFBSSxDQUFDO1FBQ0gsSUFBQSwwQkFBbUIsRUFBQyxZQUFJLEVBQUUsdUJBQXVCLENBQUMsQ0FBQztRQUNuRCxJQUFBLG9DQUF3QixFQUFDLFVBQUUsRUFBRSxXQUFXLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDaEQsSUFBQSxnQ0FBc0IsRUFBQyxlQUFPLEVBQUUsV0FBVyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ3JELENBQUM7SUFBQyxPQUFPLEtBQUssRUFBRSxDQUFDO1FBQ2YsT0FBTyxDQUFDLElBQUksQ0FBQyw4Q0FBOEMsQ0FBQyxDQUFDO0lBQy9ELENBQUM7QUFDSCxDQUFDO0FBRUQsa0JBQWUsR0FBRyxDQUFDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIkQ6XFxEb2N1bWVudHNcXGFpcHJvamV0c1xcdm90ZXB1YmxpY1xcc3JjXFxzZXJ2aWNlc1xcZmlyZWJhc2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaW5pdGlhbGl6ZUFwcCB9IGZyb20gJ2ZpcmViYXNlL2FwcCc7XHJcbmltcG9ydCB7IGdldEF1dGgsIGNvbm5lY3RBdXRoRW11bGF0b3IgfSBmcm9tICdmaXJlYmFzZS9hdXRoJztcclxuaW1wb3J0IHsgZ2V0RmlyZXN0b3JlLCBjb25uZWN0RmlyZXN0b3JlRW11bGF0b3IgfSBmcm9tICdmaXJlYmFzZS9maXJlc3RvcmUnO1xyXG5pbXBvcnQgeyBnZXRTdG9yYWdlLCBjb25uZWN0U3RvcmFnZUVtdWxhdG9yIH0gZnJvbSAnZmlyZWJhc2Uvc3RvcmFnZSc7XHJcbmltcG9ydCB7IGdldEFuYWx5dGljcywgaXNTdXBwb3J0ZWQgfSBmcm9tICdmaXJlYmFzZS9hbmFseXRpY3MnO1xyXG5pbXBvcnQgeyBGSVJFQkFTRV9DT05GSUcgfSBmcm9tICcuLi91dGlscy9jb25zdGFudHMnO1xyXG5cclxuLy8gSW5pdGlhbGlzZXIgRmlyZWJhc2VcclxuY29uc3QgYXBwID0gaW5pdGlhbGl6ZUFwcChGSVJFQkFTRV9DT05GSUcpO1xyXG5cclxuLy8gSW5pdGlhbGlzZXIgbGVzIHNlcnZpY2VzXHJcbmV4cG9ydCBjb25zdCBhdXRoID0gZ2V0QXV0aChhcHApO1xyXG5leHBvcnQgY29uc3QgZGIgPSBnZXRGaXJlc3RvcmUoYXBwKTtcclxuZXhwb3J0IGNvbnN0IHN0b3JhZ2UgPSBnZXRTdG9yYWdlKGFwcCk7XHJcblxyXG4vLyBJbml0aWFsaXNlciBBbmFseXRpY3MgKHNldWxlbWVudCBzaSBzdXBwb3J0w6kpXHJcbmV4cG9ydCBjb25zdCBhbmFseXRpY3MgPSBpc1N1cHBvcnRlZCgpLnRoZW4oeWVzID0+IHllcyA/IGdldEFuYWx5dGljcyhhcHApIDogbnVsbCk7XHJcblxyXG4vLyBDb25uZWN0ZXIgYXV4IMOpbXVsYXRldXJzIGVuIGTDqXZlbG9wcGVtZW50XHJcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50Jykge1xyXG4gIHRyeSB7XHJcbiAgICBjb25uZWN0QXV0aEVtdWxhdG9yKGF1dGgsICdodHRwOi8vbG9jYWxob3N0OjkwOTknKTtcclxuICAgIGNvbm5lY3RGaXJlc3RvcmVFbXVsYXRvcihkYiwgJ2xvY2FsaG9zdCcsIDgwODApO1xyXG4gICAgY29ubmVjdFN0b3JhZ2VFbXVsYXRvcihzdG9yYWdlLCAnbG9jYWxob3N0JywgOTE5OSk7XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUud2Fybignw4ltdWxhdGV1cnMgZMOpasOgIGNvbm5lY3TDqXMgb3Ugbm9uIGRpc3BvbmlibGVzJyk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBhcHA7ICJdLCJ2ZXJzaW9uIjozfQ==