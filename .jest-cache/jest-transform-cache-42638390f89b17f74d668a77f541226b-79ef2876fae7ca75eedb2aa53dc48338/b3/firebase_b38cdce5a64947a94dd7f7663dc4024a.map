{"file":"D:\\Documents\\aiprojets\\votepublic\\src\\services\\firebase.ts","mappings":";;;AAAA,sCAA6C;AAC7C,wCAA6D;AAC7D,kDAA4E;AAC5E,8CAAsE;AACtE,kDAA+D;AAC/D,kDAAqD;AAErD,uBAAuB;AACvB,MAAM,GAAG,GAAG,IAAA,mBAAa,EAAC,2BAAe,CAAC,CAAC;AAE3C,2BAA2B;AACd,QAAA,IAAI,GAAG,IAAA,cAAO,EAAC,GAAG,CAAC,CAAC;AACpB,QAAA,EAAE,GAAG,IAAA,wBAAY,EAAC,GAAG,CAAC,CAAC;AACvB,QAAA,OAAO,GAAG,IAAA,oBAAU,EAAC,GAAG,CAAC,CAAC;AAEvC,gDAAgD;AACnC,QAAA,SAAS,GAAG,IAAA,uBAAW,GAAE,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,IAAA,wBAAY,EAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AAEnF,4CAA4C;AAC5C,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,aAAa,EAAE,CAAC;IAC3C,IAAI,CAAC;QACH,IAAA,0BAAmB,EAAC,YAAI,EAAE,uBAAuB,CAAC,CAAC;QACnD,IAAA,oCAAwB,EAAC,UAAE,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;QAChD,IAAA,gCAAsB,EAAC,eAAO,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;IACrD,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,IAAI,CAAC,8CAA8C,CAAC,CAAC;IAC/D,CAAC;AACH,CAAC;AAED,kBAAe,GAAG,CAAC","names":[],"sources":["D:\\Documents\\aiprojets\\votepublic\\src\\services\\firebase.ts"],"sourcesContent":["import { initializeApp } from 'firebase/app';\r\nimport { getAuth, connectAuthEmulator } from 'firebase/auth';\r\nimport { getFirestore, connectFirestoreEmulator } from 'firebase/firestore';\r\nimport { getStorage, connectStorageEmulator } from 'firebase/storage';\r\nimport { getAnalytics, isSupported } from 'firebase/analytics';\r\nimport { FIREBASE_CONFIG } from '../utils/constants';\r\n\r\n// Initialiser Firebase\r\nconst app = initializeApp(FIREBASE_CONFIG);\r\n\r\n// Initialiser les services\r\nexport const auth = getAuth(app);\r\nexport const db = getFirestore(app);\r\nexport const storage = getStorage(app);\r\n\r\n// Initialiser Analytics (seulement si supporté)\r\nexport const analytics = isSupported().then(yes => yes ? getAnalytics(app) : null);\r\n\r\n// Connecter aux émulateurs en développement\r\nif (process.env.NODE_ENV === 'development') {\r\n  try {\r\n    connectAuthEmulator(auth, 'http://localhost:9099');\r\n    connectFirestoreEmulator(db, 'localhost', 8080);\r\n    connectStorageEmulator(storage, 'localhost', 9199);\r\n  } catch (error) {\r\n    console.warn('Émulateurs déjà connectés ou non disponibles');\r\n  }\r\n}\r\n\r\nexport default app; "],"version":3}