{"file":"D:\\Documents\\aiprojets\\votepublic\\src\\__tests__\\components\\PrivateRoute.test.tsx","mappings":"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","names":[],"sources":["D:\\Documents\\aiprojets\\votepublic\\src\\__tests__\\components\\PrivateRoute.test.tsx"],"sourcesContent":["import React from 'react';\r\nimport { render, screen } from '@testing-library/react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { PrivateRoute } from '../../components/PrivateRoute';\r\nimport { AuthProvider } from '../../contexts/AuthContext';\r\n\r\n// Mock du contexte d'authentification\r\nconst mockUseAuth = jest.fn();\r\n\r\njest.mock('../../contexts/AuthContext', () => ({\r\n  ...jest.requireActual('../../contexts/AuthContext'),\r\n  useAuth: () => mockUseAuth(),\r\n}));\r\n\r\nconst TestComponent = () => <div>Contenu protégé</div>;\r\n\r\nconst renderWithRouter = (component: React.ReactElement) => {\r\n  return render(\r\n    <BrowserRouter>\r\n      <AuthProvider>\r\n        {component}\r\n      </AuthProvider>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\ndescribe('PrivateRoute', () => {\r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n  });\r\n\r\n  describe('Authentification de base', () => {\r\n    it('should render children when user is authenticated', () => {\r\n      mockUseAuth.mockReturnValue({\r\n        user: { uid: '123', email: 'test@example.com', isAdmin: false },\r\n        loading: false,\r\n      });\r\n\r\n      renderWithRouter(\r\n        <PrivateRoute>\r\n          <TestComponent />\r\n        </PrivateRoute>\r\n      );\r\n\r\n      expect(screen.getByText('Contenu protégé')).toBeInTheDocument();\r\n    });\r\n\r\n    it('should redirect to login when user is not authenticated', () => {\r\n      mockUseAuth.mockReturnValue({\r\n        user: null,\r\n        loading: false,\r\n      });\r\n\r\n      renderWithRouter(\r\n        <PrivateRoute>\r\n          <TestComponent />\r\n        </PrivateRoute>\r\n      );\r\n\r\n      // Vérifier que le contenu protégé n'est pas affiché\r\n      expect(screen.queryByText('Contenu protégé')).not.toBeInTheDocument();\r\n    });\r\n\r\n    it('should show loading spinner when authentication is loading', () => {\r\n      mockUseAuth.mockReturnValue({\r\n        user: null,\r\n        loading: true,\r\n      });\r\n\r\n      renderWithRouter(\r\n        <PrivateRoute>\r\n          <TestComponent />\r\n        </PrivateRoute>\r\n      );\r\n\r\n      expect(screen.getByText('Chargement...')).toBeInTheDocument();\r\n      expect(screen.queryByText('Contenu protégé')).not.toBeInTheDocument();\r\n    });\r\n  });\r\n\r\n  describe('Authentification admin', () => {\r\n    it('should render children when user is admin', () => {\r\n      mockUseAuth.mockReturnValue({\r\n        user: { uid: '123', email: 'admin@example.com', isAdmin: true },\r\n        loading: false,\r\n      });\r\n\r\n      renderWithRouter(\r\n        <PrivateRoute requireAdmin>\r\n          <TestComponent />\r\n        </PrivateRoute>\r\n      );\r\n\r\n      expect(screen.getByText('Contenu protégé')).toBeInTheDocument();\r\n    });\r\n\r\n    it('should redirect non-admin users when requireAdmin is true', () => {\r\n      mockUseAuth.mockReturnValue({\r\n        user: { uid: '123', email: 'user@example.com', isAdmin: false },\r\n        loading: false,\r\n      });\r\n\r\n      renderWithRouter(\r\n        <PrivateRoute requireAdmin>\r\n          <TestComponent />\r\n        </PrivateRoute>\r\n      );\r\n\r\n      // Vérifier que le contenu protégé n'est pas affiché\r\n      expect(screen.queryByText('Contenu protégé')).not.toBeInTheDocument();\r\n    });\r\n\r\n    it('should allow non-admin users when requireAdmin is false', () => {\r\n      mockUseAuth.mockReturnValue({\r\n        user: { uid: '123', email: 'user@example.com', isAdmin: false },\r\n        loading: false,\r\n      });\r\n\r\n      renderWithRouter(\r\n        <PrivateRoute requireAdmin={false}>\r\n          <TestComponent />\r\n        </PrivateRoute>\r\n      );\r\n\r\n      expect(screen.getByText('Contenu protégé')).toBeInTheDocument();\r\n    });\r\n  });\r\n\r\n  describe('États de chargement', () => {\r\n    it('should show loading spinner with correct styling', () => {\r\n      mockUseAuth.mockReturnValue({\r\n        user: null,\r\n        loading: true,\r\n      });\r\n\r\n      renderWithRouter(\r\n        <PrivateRoute>\r\n          <TestComponent />\r\n        </PrivateRoute>\r\n      );\r\n\r\n      const loadingSpinner = screen.getByText('Chargement...');\r\n      expect(loadingSpinner).toBeInTheDocument();\r\n      \r\n      // Vérifier que le spinner est dans un conteneur centré\r\n      const container = loadingSpinner.closest('div');\r\n      expect(container).toHaveClass('min-h-screen', 'flex', 'items-center', 'justify-center');\r\n    });\r\n\r\n    it('should show loading spinner even when user is authenticated but still loading', () => {\r\n      mockUseAuth.mockReturnValue({\r\n        user: { uid: '123', email: 'test@example.com', isAdmin: false },\r\n        loading: true,\r\n      });\r\n\r\n      renderWithRouter(\r\n        <PrivateRoute>\r\n          <TestComponent />\r\n        </PrivateRoute>\r\n      );\r\n\r\n      expect(screen.getByText('Chargement...')).toBeInTheDocument();\r\n      expect(screen.queryByText('Contenu protégé')).not.toBeInTheDocument();\r\n    });\r\n  });\r\n\r\n  describe('Gestion des erreurs', () => {\r\n    it('should handle undefined user gracefully', () => {\r\n      mockUseAuth.mockReturnValue({\r\n        user: undefined,\r\n        loading: false,\r\n      });\r\n\r\n      renderWithRouter(\r\n        <PrivateRoute>\r\n          <TestComponent />\r\n        </PrivateRoute>\r\n      );\r\n\r\n      expect(screen.queryByText('Contenu protégé')).not.toBeInTheDocument();\r\n    });\r\n\r\n    it('should handle user without isAdmin property', () => {\r\n      mockUseAuth.mockReturnValue({\r\n        user: { uid: '123', email: 'test@example.com' },\r\n        loading: false,\r\n      });\r\n\r\n      renderWithRouter(\r\n        <PrivateRoute requireAdmin>\r\n          <TestComponent />\r\n        </PrivateRoute>\r\n      );\r\n\r\n      // Devrait rediriger car isAdmin n'est pas défini\r\n      expect(screen.queryByText('Contenu protégé')).not.toBeInTheDocument();\r\n    });\r\n  });\r\n\r\n  describe('Accessibilité', () => {\r\n    it('should have proper ARIA attributes for loading state', () => {\r\n      mockUseAuth.mockReturnValue({\r\n        user: null,\r\n        loading: true,\r\n      });\r\n\r\n      renderWithRouter(\r\n        <PrivateRoute>\r\n          <TestComponent />\r\n        </PrivateRoute>\r\n      );\r\n\r\n      const loadingText = screen.getByText('Chargement...');\r\n      expect(loadingText).toBeInTheDocument();\r\n      \r\n      // Vérifier que le texte est accessible\r\n      expect(loadingText).toHaveAttribute('class');\r\n    });\r\n\r\n    it('should maintain focus management during loading', () => {\r\n      mockUseAuth.mockReturnValue({\r\n        user: null,\r\n        loading: true,\r\n      });\r\n\r\n      renderWithRouter(\r\n        <PrivateRoute>\r\n          <TestComponent />\r\n        </PrivateRoute>\r\n      );\r\n\r\n      // Le focus devrait rester dans le conteneur de chargement\r\n      const container = screen.getByText('Chargement...').closest('div');\r\n      expect(container).toBeInTheDocument();\r\n    });\r\n  });\r\n});"],"version":3}